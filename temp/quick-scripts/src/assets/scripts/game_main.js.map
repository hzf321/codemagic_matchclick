{"version":3,"sources":["assets/scripts/game_main.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import TileBlock from \"./TileBlock\"\nimport game_level_cfg ,{LevelData} from \"./game_level_cfg\"\nimport game_config_dyn from \"./game_config_dyn\"\nimport game_helpers from \"./game_helpers\"\nimport global_model from \"./global_model\"\nimport game_core from \"./game_core\"\nimport game_constants from \"./game_constants\"\nimport { admgr } from \"./adMgr\"\nimport level_mgr from \"./level_mgr\"\n\nconst {ccclass, property} = cc._decorator;\nconst TILE_WIDTH: number = 88\nconst TILE_HEIGHT: number = 88\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    Levels: cc.Node = null;\n\n    @property(cc.Node)\n    tileContainer: cc.Node = null;\n\n\n    @property(cc.Node)\n    targetNode: cc.Node = null;\n\n\n    tileList: TileBlock[] = []\n    matchList: TileBlock[] = []\n    recordList: TileBlock[] = []\n    lvData: LevelData\n    lock: boolean = false//做动画用防止误点\n\n    @property(cc.Label)\n    level_txt: cc.Label=null\n    @property(cc.Label)\n    txt_undo: cc.Label=null\n    @property(cc.Label)\n    txt_shuffle: cc.Label=null\n    @property(cc.Label)\n    txt_hint: cc.Label=null\n    @property(cc.Label)\n    txt_put3: cc.Label=null\n\n    //分数计算\n    @property(cc.ProgressBar)\n    node_progress: cc.ProgressBar=null\n    @property(cc.Node)\n    node_star1: cc.Node=null\n    @property(cc.Node)\n    node_star2: cc.Node=null\n    @property(cc.Node)\n    node_star3: cc.Node=null\n    countDown: boolean = false\n\n    @property(cc.Node)\n    node_warning: cc.Node=null\n\n\n    @property(cc.Node)\n    result_view: cc.Node=null\n    @property(cc.Node)\n    result_view_win: cc.Node=null\n    @property(cc.Node)\n    result_view_lose: cc.Node=null\n\n    @property(cc.Node)\n    help_view: cc.Node=null\n\n\n    @property(cc.Node)\n    levels_view: cc.Node=null\n \n\n    //minzindex\n    minZindex:number = 10000\n    progress_levelBase=0.001\n    progress_levelBase_org=0.0002\n\n   \n\n\n    protected onLoad(): void {\n        if(cc.sys.platform==cc.sys.IPAD)\n        {\n            cc.find(\"Canvas\").getComponent(cc.Canvas).fitHeight = true\n            cc.find(\"Canvas\").getComponent(cc.Canvas).fitWidth = true\n        }\n        cc.systemEvent.on(game_constants.select_level_clicked,this.select_level_clicked,this)\n       \n    }\n    playSFX(audio:cc.AudioClip)\n    {\n        \n    }\n    playGamePass()\n    { \n        \n    }\n    playGameFailed()\n    { \n         \n    }\n    select_level_clicked(lv)\n    {\n        // //this.playSFX(this.btn_click)   \n        global_model.game.selectedLevel=lv\n        // console.log(\"select_level_clicked \",global_model.game.selectedLevel,lv)\n        this.go_game_reinit()\n    }\n    start() {\n        this.help_view.active=true\n        this.game_reinit()\n    }\n    game_reinit() {\n        this.recycle()\n        this.node_warning.active = false\n        this.unscheduleAllCallbacks()\n        this.tileList = []\n        this.matchList = []\n        this.recordList = []\n        this.lvData = null\n        this.lock = false\n        this.countDown = false\n        this.load_levels_data()\n        this.progress_levelBase=this.progress_levelBase_org*global_model.game.selectedLevel\n        this.progress_levelBase=Math.max(this.progress_levelBase,0.004)\n    }\n    load_levels_data() {\n        this.lvData = game_config_dyn.level.getLevelData(global_model.game.selectedLevel)\n        this.level_txt.string = \"\"+global_model.game.selectedLevel\n        this.node_progress.progress = 1\n        this.node_star1.active = this.node_star2.active = this.node_star3.active = true\n        this.updateItemView()\n        this.create_tiles_block()\n    }\n    recycle() {\n        for (const temp of this.tileList) {\n            temp.recycle()\n        }\n        for (const temp of this.matchList) {\n            temp.recycle()\n        }\n    }\n    create_tiles_block() {\n        this.tileContainer.destroyAllChildren()\n        let aniPos = [cc.v2(0, 1201), cc.v2(701, 0), cc.v2(0, -1201), cc.v2(-701, 0)]\n\n        let types = game_config_dyn.level.getTypes(this.lvData.count, this.lvData.typeCount)\n        types = game_helpers.randomArray(types)\n        let c = 0\n        let minX = 999999\n        let minY = 999999\n        let maxX = 0\n        let maxY = 0\n        for (let i = 0; i < this.lvData.floorIds.length; i++) {\n            \n            let floorData = game_config_dyn.level.getFloorData(Number(this.lvData.floorIds[i]))\n            let tiles = floorData.layouts\n            for (const info of tiles) {\n                let pos = info.split(',')\n                let row = Number(pos[0])\n                let col = Number(pos[1])\n               \n                let tile = game_core.pool.get('TileBlock')\n                let node = tile.node\n                node.parent = this.tileContainer\n                node.scale = 1\n\n                this.tileList.push(tile)\n                let offset = cc.v2(TILE_WIDTH*0.5 * i, -TILE_HEIGHT*0.5 * i)\n                tile.layer = i\n                tile.row = row\n                tile.col = col\n                tile.node.zIndex = this.get___Zindex(row, col, tile.layer)\n\n                let targetPos = this.getTilePos(row, col, offset)\n                node.position = targetPos\n\n                tile.type = types[c]\n                node.off(cc.Node.EventType.TOUCH_START)\n                node.on(cc.Node.EventType.TOUCH_START, () => {\n                    if (!this.lock && !tile.dark) {\n                        this.addToMatchList(tile)\n                        // //this.playSFX(this.block_click)\n                        // //game_core.soundManager.playSFX('clickcube')\n                        //有了操作之后，开始倒计时\n                        this.countDown = true\n                        // if (//game_core.soundManager.vibrate == 1)\n                        //     WXTTgame_helpers.vibrateShort()\n                    }\n\n                })\n\n                if (node.x > maxX)\n                    maxX = node.x\n                if (node.y > maxY)\n                    maxY = node.y\n\n                if (node.x < minX)\n                    minX = node.x\n                if (node.y < minY)\n                    minY = node.y\n\n                c++\n\n\n            }\n           \n        }\n\n        let w = maxX - minX\n        let h = maxY - minY\n        // let t = this.levelData.layouts[maxIndex].alignW == 5 ? 35 : 0\n        this.tileContainer.x = -w * 0.5 - minX\n        this.tileContainer.y = (h >> 1) - maxY + 150\n        this.check_All_Block()\n\n        //做动画\n        let all = this.tileContainer.children\n        for (const node of all) {\n            let tile = node.getComponent(TileBlock)\n            let i = tile.layer\n            let offset = cc.v2(TILE_WIDTH*0.5 * i, -TILE_HEIGHT*0.5* i)\n            let targetPos = this.getTilePos(tile.row, tile.col, offset)\n            node.position = targetPos\n            node.position = cc.v3(targetPos.x + aniPos[i % 4].x, targetPos.y + aniPos[i % 4].y)\n            cc.tween(node).delay(i * 0.2 + 0.1).call(() => {\n                //game_core.soundManager.playSFX('swtich', 10)\n                //this.playSFX(this.block_switch)\n            }).to(0.25, { position: targetPos }, { easing: 'sineOut' }).start()\n\n        }\n    }\n\n    get___Zindex(row, col, layer) {\n        return row * 20 + col + layer * 200\n    }\n    check_All_Block(ani: boolean = false) {\n        for (const tile of this.tileList) {\n            if(tile.node.zIndex < 10000){\n                if (this._has_Block(tile)) {\n                    tile.setDark(true, ani)\n                } else {\n                    tile.setDark(false, ani)\n                }\n            }\n        }\n    }\n    _has_Block(tile: TileBlock) {\n        let tileRec = tile.node.getBoundingBox()\n        \n        for (const tempTile of this.tileList) {\n            if (tempTile == tile) continue\n            if (tempTile.layer > tile.layer) {                \n                if (tempTile.node.getBoundingBox().intersects(tileRec)) {\n                    return true\n                }\n            }\n        }\n        return false\n    }\n    getTilePos(row: number, col: number, offset: cc.Vec2) {\n        return cc.v3(col * TILE_WIDTH + offset.x, -row * TILE_HEIGHT + offset.y, 0)\n    }\n    //添加到列表\n    addToMatchList(tile: TileBlock) {\n        if (this.matchList.length < 7) {\n            if (this.matchList.indexOf(tile) != -1) return\n            tile.setDark(false, false)\n\n            game_helpers.removeElementFromArray(tile, this.tileList)\n\n            this.recordList.push(tile)\n\n            tile.node.zIndex = 999\n            let bol = false\n            for (let i = this.matchList.length - 1; i >= 0; i--) {\n                if (this.matchList[i].type == tile.type) {\n                    bol = true\n                    this.matchList.splice(i + 1, 0, tile)\n                    break\n                }\n            }\n            if (!bol)\n                this.matchList.push(tile)\n            this.setMatchDepth()\n            this.moveToRightPos()\n            this.checkRemove()\n            this.check_All_Block(true)\n            this.checkWarning()\n            this.checkGameResult()\n        }\n\n    }\n    setMatchDepth() {\n        for (let i = this.matchList.length - 1; i >= 0; i--) {\n            this.matchList[i].node.zIndex = i + 999\n        }\n    }\n    moveToRightPos() {\n        for (let i = 0; i < this.matchList.length; i++) {\n            let pos = game_helpers.convetOtherNodeSpaceAR(this.targetNode, this.tileContainer)\n            let targetX = i * 82 + pos.x - 246\n            let targetY = pos.y + 2\n            cc.Tween.stopAllByTarget(this.matchList[i].node)\n            cc.tween(this.matchList[i].node).to(0.3, { x: targetX, y: targetY }, { easing: 'sineOut' }).call((targetNode: cc.Node) => {\n\n                let targetTile = targetNode.getComponent(TileBlock)\n                if (targetTile.remove) {\n                    targetTile.recycle(true)\n                    //targetNode.destroy()\n                    this.moveToRightPos()\n                    this.checkGameResult()\n                    //game_core.soundManager.playSFX('tileclean')\n                    //this.playSFX(Math.random()>0.5?this.block_clean:this.block_clean2)\n                    this.updateProgress(0.01)\n                }\n            }).start()\n        }\n\n    }\n    removeList: TileBlock[] = []\n    checkRemove() {\n        let obj: any = {}\n        for (const tile of this.matchList) {\n            obj[tile.type] = obj[tile.type] || 0\n            obj[tile.type]++\n        }\n\n        for (const key in obj) {\n            if (obj[key] >= 3) {\n                for (let i = 0; i < this.matchList.length; i++) {\n                    let tile = this.matchList[i]\n                    if (tile.type == Number(key)) {\n                        game_helpers.removeElementFromArray(tile, this.recordList)\n                        tile.remove = true\n\n                        this.matchList.splice(i, 1)\n                        i--\n                    }\n                }\n                break\n            }\n        }\n    }\n    searchRemoveable() {\n        let arrDark: any = []\n        let objLight: any = {}\n        for (let i = this.tileList.length - 1; i >= 0; i--) {\n            let tile = this.tileList[i]\n            if (!tile.dark) {\n                objLight[tile.type] = objLight[tile.type] || []\n                objLight[tile.type].push(tile)\n            } else {\n                arrDark.push(tile)\n            }\n\n        }\n        //底部tiles\n        if (this.matchList.length > 0) {\n            let bottomObj: any = {}\n            for (const bottom of this.matchList) {\n                bottomObj[bottom.type] = bottomObj[bottom.type] || []\n                bottomObj[bottom.type].push(bottom)\n            }\n            let bottomArr = []\n            for (const key in bottomObj) {\n                bottomArr.push({ type: Number(key), tiles: bottomObj[key], count: bottomObj[key].length })\n            }\n            bottomArr.sort((a, b) => {\n                return b.count - a.count\n            })\n\n            let first = bottomArr[0]\n            let needCount = 3 - first.count\n            let needType = first.type\n            for (let i = 0; i < this.tileList.length; i++) {\n                if (this.tileList[i].type == needType) {\n                    this.addToMatchList(this.tileList[i])\n                    needCount--\n                    if (needCount == 0)\n                        break\n                }\n            }\n        } else {\n\n            let lightArr = []\n            for (const key in objLight) {\n                lightArr.push({ type: Number(key), tiles: objLight[key], count: objLight[key].length })\n            }\n            lightArr.sort((a, b) => {\n                return b.count - a.count\n            })\n\n\n\n            let first = lightArr[0]\n            let ownCount = Math.min(3, first.tiles.length)\n            for (let i = 0; i < ownCount; i++) {\n                this.addToMatchList(first.tiles[i])\n            }\n            let leftCount = Math.max(0, 3 - first.count)\n            let needType = first.type\n            if (leftCount > 0) {\n                for (const temp of arrDark) {\n                    if (temp.type == needType) {\n                        this.addToMatchList(temp)\n                        leftCount--\n                        if (leftCount == 0)\n                            break\n                    }\n                }\n            }\n        }\n    }\n    checkGameResult() {\n        if (this.matchList.length >= 7) {\n            this.lock = true\n            this.result_view.active=true\n            this.result_view_win.active=false\n            this.result_view_lose.active=true\n            this.playGameFailed()\n        } else if (this.tileList.length == 0) {  //success...\n            this.playGamePass()\n            this.lock = true\n            let hasAward = false\n            if (global_model.game.selectedLevel == global_model.game.level) {\n\n                if (global_model.game.level >= 8 && global_model.game.level % 4 == 0) {\n                    hasAward = true\n                }\n                global_model.game.level++\n                let star = 0\n                if (this.node_progress.progress >= 0.8)\n                    star = 3\n                else if (this.node_progress.progress >= 0.5)\n                    star = 2\n                else if (this.node_progress.progress > 0.1)\n                    star = 1\n                global_model.game.level_star[global_model.game.selectedLevel] = star\n                global_model.save()\n            }\n            this.result_view.active=true\n            this.result_view_win.active=true\n            this.result_view_lose.active=false\n        }\n    }\n    playFailAni(callback: Function) {\n\n        for (const temp of this.tileList) {\n            let delay = temp.row * 0.05 + temp.col * 0.05\n            cc.tween(temp.node).delay(delay).by(0.5, { y: -1400 }, { easing: 'backInOut' }).start()\n        }\n        this.scheduleOnce(() => {\n            callback && callback()\n        }, 1)\n    }\n    checkWarning() {\n        if (this.matchList.length < 5) {\n            cc.Tween.stopAllByTarget(this.node_warning)\n            this.node_warning.active = false\n        } else {\n            this.node_warning.active = true\n            cc.Tween.stopAllByTarget(this.node_warning)\n            cc.tween(this.node_warning).to(1, { opacity: 0 }).to(1, { opacity: 255 }).union().repeatForever().start()\n        }\n    }\n\n    click_prev() {\n\n\n    }\n    click_shuffle() {\n        //this.playSFX(this.btn_click)\n        if (global_model.game.shuffle_counter > 0) {\n            global_model.game.shuffle_counter--\n            global_model.save()\n            this.updateItemView()\n            this.shuffle()\n        } else {\n            if(this.lock)return\n\n            admgr.showVideo(()=>{\n                global_model.game.shuffle_counter++\n                global_model.save()\n                this.updateItemView()\n            })\n       \n            // this.lock = true\n        }  \n    }\n    shuffle() {\n        for (let i = 0; i < 500; i++) {\n            let rndA = Math.floor(Math.random() * this.tileList.length)\n            let rndB = Math.floor(Math.random() * this.tileList.length)\n            if (rndA != rndB) {\n                let nodeA = this.tileList[rndA]\n                let nodeB = this.tileList[rndB]\n                this.swapTile(nodeA, nodeB)\n            }\n        }\n        for (const tile of this.tileList) {\n            let offset = cc.v2(tile.layer * TILE_WIDTH*0.5, -tile.layer * TILE_HEIGHT*0.5)\n            let pos = this.getTilePos(tile.row, tile.col, offset)\n            cc.Tween.stopAllByTarget(tile.node)\n            cc.tween(tile.node).to(0.25, { position: pos }).call(() => {\n                this.check_All_Block(true)\n            }).start()\n        }\n    }\n    swapTile(tileA: TileBlock, tileB: TileBlock) {\n\n        let tempRow = tileA.row\n        tileA.row = tileB.row\n        tileB.row = tempRow\n\n        let tempCol = tileA.col\n        tileA.col = tileB.col\n        tileB.col = tempCol\n\n        let tempLayer = tileA.layer\n        tileA.layer = tileB.layer\n        tileB.layer = tempLayer\n\n        let tempZindex = tileA.node.zIndex\n        tileA.node.zIndex = tileB.node.zIndex\n        tileB.node.zIndex = tempZindex\n\n    }\n    click_undo() {\n        //this.playSFX(this.btn_click)\n        if (this.recordList.length == 0) {\n            // MsgHints.show('没有操作的记录?')\n            // MsgHints.show('No operation record!')\n            admgr.showToast(\"No operation record!\");\n            return\n        }\n        if (global_model.game.undo_counter > 0) {\n            global_model.game.undo_counter--\n            global_model.save()\n            this.updateItemView()\n            this.undo_operator()\n        } else {\n            if(this.lock)return\n            admgr.showVideo(()=>{\n                global_model.game.undo_counter++\n                global_model.save()\n                this.updateItemView()\n            })\n            // this.lock = true\n       \n        }\n\n    }\n    undo_operator() {\n        if (this.recordList.length > 0) {\n            let tile = this.recordList.pop()\n            let offset = cc.v2(tile.layer * TILE_WIDTH*0.5, -tile.layer * TILE_HEIGHT*0.5)\n            let pos = this.getTilePos(tile.row, tile.col, offset)\n\n            tile.node.zIndex = this.get___Zindex(tile.row, tile.col, tile.layer)\n\n            game_helpers.removeElementFromArray(tile, this.matchList)\n            this.tileList.push(tile)\n\n            cc.tween(tile.node).to(0.25, { position: pos }, { easing: 'sineOut' }).call(() => {\n                this.check_All_Block(true)\n                this.moveToRightPos()\n            }).start()\n        }\n    }\n    click_hint() {\n        //this.playSFX(this.btn_click)\n        if (global_model.game.hint_tip_counter > 0) {\n            global_model.game.hint_tip_counter--\n            global_model.save()\n            this.updateItemView()\n            this.searchRemoveable()\n        } else {\n            if(this.lock)return\n            admgr.showVideo(()=>{\n                global_model.game.hint_tip_counter++\n                global_model.save()\n                this.updateItemView()\n            })\n            // console.log('数量不足，弹出购买')\n            // this.lock = true\n        }\n\n    }\n    click_moveup() {\n        //this.playSFX(this.btn_click)\n        if (this.recordList.length < 3) {\n            // MsgHints.show('至少有3个才能一起推上去')\n            // MsgHints.show('No operation record!')\n            admgr.showToast(\"No operation record!\")\n            return\n        }\n        if (global_model.game.move_up_counter > 0) {\n            global_model.game.move_up_counter--\n            global_model.save()\n            this.updateItemView()\n            \n            //放三个 块上去最左边的三个块放上去\n            this.moveup3_elements()\n        } else {\n            if(this.lock)return\n            admgr.showVideo(()=>{\n                global_model.game.move_up_counter++\n                global_model.save()\n                this.updateItemView()\n            })\n            // console.log('数量不足，弹出购买')\n            // this.lock = true\n        }\n\n    }\n    moveup3_elements(){\n        let pos1 = game_helpers.convetOtherNodeSpaceAR(this.targetNode, this.tileContainer)\n        for (let index = 0; index < 3; index++) {\n            if (this.matchList.length > 0) {\n                let tile = this.matchList.shift()\n                // let offset = cc.v2(tile.layer * TILE_WIDTH*0.5, -tile.layer * TILE_HEIGHT*0.5)\n                // let pos = this.getTilePos(tile.row, tile.col, offset)\n                let targetX = pos1.x - TILE_WIDTH + index * TILE_WIDTH\n                let targetY = pos1.y + 130\n    \n                \n                this.minZindex++\n                let pos = cc.v3(targetX,targetY,0)\n                tile.node.zIndex = this.minZindex//固定一下 直接压着\n                // console.log('-------zindex',cc.macro.MAX_ZINDEX)\n                // game_helpers.removeElementFromArray(tile, this.matchList)\n                game_helpers.removeElementFromArray(tile, this.recordList)\n                this.tileList.push(tile)\n    \n                cc.tween(tile.node).to(0.25, { position: pos }, { easing: 'sineOut' }).call(() => {\n                    \n                }).start()\n            }\n        }\n        let self = this\n        setTimeout(() => {\n            self.check_All_Block(true)\n            self.moveToRightPos()\n        }, 250);\n    }\n    click_help() {\n        // game_core.win.open(GameConst.winPath.HelpWin)\n    }\n    updateItemView() {\n        this.txt_hint.string = global_model.game.hint_tip_counter == 0 ? '0' : global_model.game.hint_tip_counter + ''\n        this.txt_shuffle.string = global_model.game.shuffle_counter == 0 ? '0' : global_model.game.shuffle_counter + ''\n        this.txt_undo.string = global_model.game.undo_counter == 0 ? '0' : global_model.game.undo_counter + ''\n        this.txt_put3.string = global_model.game.move_up_counter == 0 ? '0' : global_model.game.move_up_counter + ''\n\n        if (parseInt(this.txt_undo.string) <= 0) {\n            this.txt_undo.node.parent.getChildByName(\"adicon\").active = true;\n        }else{\n            this.txt_undo.node.parent.getChildByName(\"adicon\").active = false;\n        }\n\n        if (parseInt(this.txt_hint.string) <= 0) {\n            this.txt_hint.node.parent.getChildByName(\"adicon\").active = true;\n        }else{\n            this.txt_hint.node.parent.getChildByName(\"adicon\").active = false;\n        }\n\n        if (parseInt(this.txt_shuffle.string) <= 0) {\n            this.txt_shuffle.node.parent.getChildByName(\"adicon\").active = true;\n        }else{\n            this.txt_shuffle.node.parent.getChildByName(\"adicon\").active = false;\n        }\n\n        if (parseInt(this.txt_put3.string) <= 0) {\n            this.txt_put3.node.parent.getChildByName(\"adicon\").active = true;\n        }else{\n            this.txt_put3.node.parent.getChildByName(\"adicon\").active = false;\n        }\n\n\n\n    }\n   \n    close(): void {\n        // super.close()\n        \n    }\n\n    panelDataUpdate(data: any): void {\n        this.game_reinit()\n    }\n    updateProgress(offset: number) {\n        this.node_progress.progress += offset\n        if (this.node_progress.progress <= 0)\n        {\n            this.node_progress.progress = 0\n            this.lock = true\n            this.result_view.active=true\n            this.result_view_win.active=false\n            this.result_view_lose.active=true\n        }\n        else if (this.node_progress.progress > 1)\n            this.node_progress.progress = 1\n\n        this.node_star1.active = this.node_progress.progress >= 0.1\n        this.node_star2.active = this.node_progress.progress >= 0.5\n        this.node_star3.active = this.node_progress.progress >= 0.8\n    }\n    update(dt: number): void \n    {\n        if (this.lock) return\n        if (this.countDown) {\n            this.updateProgress(-dt * this.progress_levelBase)\n        }\n    }\n    go_home()\n    {\n        //this.playSFX(this.btn_click)\n        cc.director.loadScene(\"game_home\")\n    }\n    go_nextLv()\n    {\n        //this.playSFX(this.btn_click)\n        global_model.game.selectedLevel++\n        this.result_view.active=false\n        this.game_reinit()\n        this.Levels.getComponent(level_mgr).updataData();\n    }\n    go_game_reinit()\n    {\n        //this.playSFX(this.btn_click)\n        this.result_view.active=false\n        this.game_reinit()\n        this.Levels.getComponent(level_mgr).updataData();\n         \n    }\n    hideshow_settingView()\n    {\n        //this.playSFX(this.btn_click)\n    }\n    toggleMusic(evt:cc.Toggle)\n    {\n        // global_model.game.music_flag=evt.isChecked?1:0\n        global_model.save()\n    }\n    toggleSFX(evt:cc.Toggle)\n    {\n        \n        //this.playSFX(this.btn_click)\n        // global_model.game.sfx_flag=evt.isChecked?1:0\n        global_model.save()\n    }\n    hideshow_LevelView()\n    {\n        //this.playSFX(this.btn_click)\n        this.levels_view.active=!this.levels_view.active\n    }\n    openFbToshare()\n    {\n        cc.sys.openURL(\"fb://\")\n    }\n}\n"]}