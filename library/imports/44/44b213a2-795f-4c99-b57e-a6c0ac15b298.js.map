{"version":3,"sources":["assets/scripts/TileBlock.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import game_core from \"./game_core\";\nimport game_helpers from \"./game_helpers\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TileBlock extends cc.Component {\n\n    @property(cc.Sprite)\n    sp_icon: cc.Sprite = null;\n\n\n    @property(cc.Node)\n    tileBg: cc.Node = null;\n\n\n    remove: boolean = false\n    private _type: number;\n\n    row: number\n    col: number\n    layer: number\n    aniObj = { c: 0 }\n\n    public get type(): number {\n        return this._type;\n    }\n    public set type(value: number) {\n        this._type = value;\n        cc.resources.load(\"ares_bndl/icons/\"+value,cc.Texture2D,(err, texture: cc.Texture2D) => {\n            let sp = new cc.SpriteFrame(texture)\n            this.sp_icon.spriteFrame = sp\n\n        })\n    }\n\n    start() {\n\n    }\n    private _dark: boolean = false;\n    public get dark(): boolean {\n        return this._dark;\n    }\n    public set dark(value: boolean) {\n        this._dark = value;\n\n    }\n    setDark(value: boolean, ani: boolean = false) {\n        if (this._dark != value) {\n            this._dark = value\n            if (ani) {\n                let start = 80\n                let end = 255\n                if (value) {\n                    start = 255\n                    end = 80\n                }\n                this.aniObj.c = start\n                cc.Tween.stopAllByTarget(this.aniObj)\n                cc.tween(this.aniObj).to(0.5, { c: end }, {\n                    progress: (start, end, current, radio) => {\n                        let tempColor = start + (end - start) * radio\n                        this.sp_icon.node.color = cc.color(tempColor, tempColor, tempColor)\n                        this.tileBg.color = cc.color(tempColor, tempColor, tempColor)\n\n                    }\n                }).start()\n\n            } else {\n                let grayse = 80\n                this.sp_icon.node.color = value ? cc.color(grayse, grayse, grayse) : cc.color(255, 255, 255)\n                this.tileBg.color = value ? cc.color(grayse, grayse, grayse) : cc.color(255, 255, 255)\n            }\n        }\n\n    }\n    recycle(ani: boolean = false) {\n        this.remove = false\n        this._dark = false\n        cc.Tween.stopAllByTarget(this.aniObj)\n        cc.Tween.stopAllByTarget(this.node)\n        this.sp_icon.node.color = cc.color(255, 255, 255)\n        this.tileBg.color = cc.color(255, 255, 255)\n       \n        if (ani) {\n            cc.tween(this.node).delay(0.06).to(0.2, { scale: 0 }).call(() => {\n                game_core.pool.recover('TileBlock', this.node)\n            }).start()\n        } else {\n            game_core.pool.recover('TileBlock', this.node)\n        }\n    }\n\n\n    // update (dt) {}\n}"]}